/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TenantGroupObservation struct {
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	ParentID *float64 `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	Slug *string `json:"slug,omitempty" tf:"slug,omitempty"`
}

type TenantGroupParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	ParentID *float64 `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// +kubebuilder:validation:Optional
	Slug *string `json:"slug,omitempty" tf:"slug,omitempty"`
}

// TenantGroupSpec defines the desired state of TenantGroup
type TenantGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TenantGroupParameters `json:"forProvider"`
}

// TenantGroupStatus defines the observed state of TenantGroup.
type TenantGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TenantGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TenantGroup is the Schema for the TenantGroups API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,netbox}
type TenantGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TenantGroupSpec   `json:"spec"`
	Status            TenantGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TenantGroupList contains a list of TenantGroups
type TenantGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TenantGroup `json:"items"`
}

// Repository type metadata.
var (
	TenantGroup_Kind             = "TenantGroup"
	TenantGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TenantGroup_Kind}.String()
	TenantGroup_KindAPIVersion   = TenantGroup_Kind + "." + CRDGroupVersion.String()
	TenantGroup_GroupVersionKind = CRDGroupVersion.WithKind(TenantGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&TenantGroup{}, &TenantGroupList{})
}
